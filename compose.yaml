services:

  watchtower:
    image: containrrr/watchtower
    command:
      - "--label-enable"
      - "--interval"
      - "30"
      - "--rolling-restart"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"

  reverse-proxy:
    image: traefik:v3.2
    command:
      - "--providers.docker"
      - "--providers.docker.exposedbydefault=false" # prevents docker contains from being exposed by default
      - "--entryPoints.websecure.address=:443" # identify an entrypoint for HTTPS
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true" # define challenge type as TLS
      - "--certificatesresolvers.myresolver.acme.email=ntumiwa.work@gmail.com" # declare email associated with certificate request
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json" # where to store certificate data
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  server:
    image: adamkadda/ntumiwa-site:prod
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.server.rule=Host(`nadiatumiwa.com`)"
      - "traefik.http.routers.server.entrypoints=websecure" # requests must come through 443
      - "traefik.http.routers.server.tls.certresolver=myresolver" # use myresolver
      - "traefik.http.middlewares.test-http-cache.plugin.httpCache.maxTtl=216000" # 1 hour cache
      - "com.centurylinklabs.watchtower.enable=true"
    deploy:
      mode: replicated
      replicas: 3

volumes:
  letsencrypt:
